<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbz.timescale.mapper.KLineMapper">
  <resultMap id="BaseResultMap" type="com.bbz.timescale.entity.KLine">
    <result column="k_time" jdbcType="TIMESTAMP" property="kTime" />
    <result column="resolution" jdbcType="DECIMAL" property="resolution" />
    <result column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="exchange_id" jdbcType="VARCHAR" property="exchangeId" />
    <result column="o" jdbcType="DECIMAL" property="o" />
    <result column="h" jdbcType="DECIMAL" property="h" />
    <result column="l" jdbcType="DECIMAL" property="l" />
    <result column="c" jdbcType="DECIMAL" property="c" />
    <result column="volume" jdbcType="DECIMAL" property="volume" />
    <result column="turnover" jdbcType="DECIMAL" property="urnover" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    k_time, resolution, symbol, exchange_id, o, h, l, c, volume, turnover
  </sql>
  <select id="selectByExample" parameterType="com.bbz.timescale.entity.KLineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_k_line
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.bbz.timescale.entity.KLineExample">
    delete from t_k_line
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bbz.timescale.entity.KLine">
    insert into t_k_line (k_time, resolution, symbol, 
      exchange_id, o, h, l, 
      c, volume, turnover)
    values (#{kTime,jdbcType=TIMESTAMP}, #{resolution,jdbcType=DECIMAL}, #{symbol,jdbcType=VARCHAR}, 
      #{exchangeId,jdbcType=VARCHAR}, #{o,jdbcType=DECIMAL}, #{h,jdbcType=DECIMAL}, #{l,jdbcType=DECIMAL}, 
      #{c,jdbcType=DECIMAL}, #{volume,jdbcType=DECIMAL}, #{urnover,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.bbz.timescale.entity.KLine">
    insert into t_k_line
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="kTime != null">
        k_time,
      </if>
      <if test="resolution != null">
        resolution,
      </if>
      <if test="symbol != null">
        symbol,
      </if>
      <if test="exchangeId != null">
        exchange_id,
      </if>
      <if test="o != null">
        o,
      </if>
      <if test="h != null">
        h,
      </if>
      <if test="l != null">
        l,
      </if>
      <if test="c != null">
        c,
      </if>
      <if test="volume != null">
        volume,
      </if>
      <if test="urnover != null">
        turnover,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="kTime != null">
        #{kTime,jdbcType=TIMESTAMP},
      </if>
      <if test="resolution != null">
        #{resolution,jdbcType=DECIMAL},
      </if>
      <if test="symbol != null">
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="exchangeId != null">
        #{exchangeId,jdbcType=VARCHAR},
      </if>
      <if test="o != null">
        #{o,jdbcType=DECIMAL},
      </if>
      <if test="h != null">
        #{h,jdbcType=DECIMAL},
      </if>
      <if test="l != null">
        #{l,jdbcType=DECIMAL},
      </if>
      <if test="c != null">
        #{c,jdbcType=DECIMAL},
      </if>
      <if test="volume != null">
        #{volume,jdbcType=DECIMAL},
      </if>
      <if test="urnover != null">
        #{urnover,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bbz.timescale.entity.KLineExample" resultType="java.lang.Long">
    select count(*) from t_k_line
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_k_line
    <set>
      <if test="record.kTime != null">
        k_time = #{record.kTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.resolution != null">
        resolution = #{record.resolution,jdbcType=DECIMAL},
      </if>
      <if test="record.symbol != null">
        symbol = #{record.symbol,jdbcType=VARCHAR},
      </if>
      <if test="record.exchangeId != null">
        exchange_id = #{record.exchangeId,jdbcType=VARCHAR},
      </if>
      <if test="record.o != null">
        o = #{record.o,jdbcType=DECIMAL},
      </if>
      <if test="record.h != null">
        h = #{record.h,jdbcType=DECIMAL},
      </if>
      <if test="record.l != null">
        l = #{record.l,jdbcType=DECIMAL},
      </if>
      <if test="record.c != null">
        c = #{record.c,jdbcType=DECIMAL},
      </if>
      <if test="record.volume != null">
        volume = #{record.volume,jdbcType=DECIMAL},
      </if>
      <if test="record.urnover != null">
        turnover = #{record.urnover,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_k_line
    set k_time = #{record.kTime,jdbcType=TIMESTAMP},
      resolution = #{record.resolution,jdbcType=DECIMAL},
      symbol = #{record.symbol,jdbcType=VARCHAR},
      exchange_id = #{record.exchangeId,jdbcType=VARCHAR},
      o = #{record.o,jdbcType=DECIMAL},
      h = #{record.h,jdbcType=DECIMAL},
      l = #{record.l,jdbcType=DECIMAL},
      c = #{record.c,jdbcType=DECIMAL},
      volume = #{record.volume,jdbcType=DECIMAL},
      turnover = #{record.urnover,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>